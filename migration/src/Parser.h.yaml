---
MainSourceFile:  'd:\github\blaze\migration\src\parser.h'
Replacements:
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          947
    Length:          0
    ReplacementText: "#include <sycl/sycl.hpp>\r\n#include <dpct/dpct.hpp>\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          1912
    Length:          0
    ReplacementText: "/* DPCT_ORIG         scene->sourceRange = make_int2((int)d[\"sourceRange\"][0].GetFloat(),\r\n                                       (int)d[\"sourceRange\"][1].GetFloat());*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          1941
    Length:          123
    ReplacementText: 'sycl::int2((int)d["sourceRange"][0].GetFloat(), (int)d["sourceRange"][1].GetFloat())'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          2213
    Length:          0
    ReplacementText: "/* DPCT_ORIG         scene->renderRange = make_int2((int)d[\"renderRange\"][0].GetFloat(),\r\n                                       (int)d[\"renderRange\"][1].GetFloat());*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          2242
    Length:          123
    ReplacementText: 'sycl::int2((int)d["renderRange"][0].GetFloat(), (int)d["renderRange"][1].GetFloat())'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          2513
    Length:          0
    ReplacementText: "/* DPCT_ORIG         scene->gridRes = make_int3(d[\"gridRes\"][0].GetInt(),\r\n                                   d[\"gridRes\"][1].GetInt(),\r\n                                   d[\"gridRes\"][2].GetInt());*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          2538
    Length:          159
    ReplacementText: 'sycl::int3(d["gridRes"][0].GetInt(), d["gridRes"][1].GetInt(), d["gridRes"][2].GetInt())'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          2700
    Length:          0
    ReplacementText: "/* DPCT_ORIG         scene->renderRes = make_int2(d[\"renderRes\"][0].GetInt(),\r\n                                     d[\"renderRes\"][1].GetInt());*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          2727
    Length:          103
    ReplacementText: 'sycl::int2(d["renderRes"][0].GetInt(), d["renderRes"][1].GetInt())'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          2835
    Length:          0
    ReplacementText: "/* DPCT_ORIG         scene->domainBboxMin = make_float3(d[\"domainBboxMin\"][0].GetFloat(),\r\n                                           d[\"domainBboxMin\"][1].GetFloat(),\r\n                                           d[\"domainBboxMin\"][2].GetFloat());*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          2866
    Length:          201
    ReplacementText: 'sycl::float3(d["domainBboxMin"][0].GetFloat(), d["domainBboxMin"][1].GetFloat(), d["domainBboxMin"][2].GetFloat())'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          3070
    Length:          0
    ReplacementText: "/* DPCT_ORIG         scene->domainBboxMax = make_float3(d[\"domainBboxMax\"][0].GetFloat(),\r\n                                           d[\"domainBboxMax\"][1].GetFloat(),\r\n                                           d[\"domainBboxMax\"][2].GetFloat());*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          3101
    Length:          201
    ReplacementText: 'sycl::float3(d["domainBboxMax"][0].GetFloat(), d["domainBboxMax"][1].GetFloat(), d["domainBboxMax"][2].GetFloat())'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          4468
    Length:          0
    ReplacementText: "/* DPCT_ORIG         scene->turbMaskTempRamp = make_float2(d[\"turbMaskTempRamp\"][0].GetFloat(),\r\n                                              d[\"turbMaskTempRamp\"][1].GetFloat());*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          4502
    Length:          132
    ReplacementText: 'sycl::float2(d["turbMaskTempRamp"][0].GetFloat(), d["turbMaskTempRamp"][1].GetFloat())'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          4637
    Length:          0
    ReplacementText: "/* DPCT_ORIG         scene->turbMaskVelRamp = make_float2(d[\"turbMaskVelRamp\"][0].GetFloat(),\r\n                                             d[\"turbMaskVelRamp\"][1].GetFloat());*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          4670
    Length:          129
    ReplacementText: 'sycl::float2(d["turbMaskVelRamp"][0].GetFloat(), d["turbMaskVelRamp"][1].GetFloat())'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          5160
    Length:          0
    ReplacementText: "/* DPCT_ORIG             scene->lightDir[i] = make_float3(d[\"lights\"][i][\"light_dir\"][0].GetFloat(),\r\n                                             d[\"lights\"][i][\"light_dir\"][1].GetFloat(),\r\n                                             d[\"lights\"][i][\"light_dir\"][2].GetFloat());*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          5193
    Length:          232
    ReplacementText: 'sycl::float3(d["lights"][i]["light_dir"][0].GetFloat(), d["lights"][i]["light_dir"][1].GetFloat(), d["lights"][i]["light_dir"][2].GetFloat())'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          5428
    Length:          0
    ReplacementText: "/* DPCT_ORIG             scene->lightColor[i] = make_float3(d[\"lights\"][i][\"light_color\"][0].GetFloat(),\r\n                                               d[\"lights\"][i][\"light_color\"][1].GetFloat(),\r\n                                               d[\"lights\"][i][\"light_color\"][2].GetFloat());*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          5463
    Length:          242
    ReplacementText: 'sycl::float3(d["lights"][i]["light_color"][0].GetFloat(), d["lights"][i]["light_color"][1].GetFloat(), d["lights"][i]["light_color"][2].GetFloat())'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          5841
    Length:          0
    ReplacementText: "/* DPCT_ORIG         scene->camU = make_float3(d[\"cam\"][\"rotMat\"][0][0].GetFloat(),\r\n                                  d[\"cam\"][\"rotMat\"][0][1].GetFloat(),\r\n                                  d[\"cam\"][\"rotMat\"][0][2].GetFloat());*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          5863
    Length:          192
    ReplacementText: 'sycl::float3(d["cam"]["rotMat"][0][0].GetFloat(), d["cam"]["rotMat"][0][1].GetFloat(), d["cam"]["rotMat"][0][2].GetFloat())'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          6058
    Length:          0
    ReplacementText: "/* DPCT_ORIG         scene->camV = make_float3(d[\"cam\"][\"rotMat\"][1][0].GetFloat(),\r\n                                  d[\"cam\"][\"rotMat\"][1][1].GetFloat(),\r\n                                  d[\"cam\"][\"rotMat\"][1][2].GetFloat());*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          6080
    Length:          192
    ReplacementText: 'sycl::float3(d["cam"]["rotMat"][1][0].GetFloat(), d["cam"]["rotMat"][1][1].GetFloat(), d["cam"]["rotMat"][1][2].GetFloat())'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          6275
    Length:          0
    ReplacementText: "/* DPCT_ORIG         scene->camW = make_float3(d[\"cam\"][\"rotMat\"][2][0].GetFloat(),\r\n                                  d[\"cam\"][\"rotMat\"][2][1].GetFloat(),\r\n                                  d[\"cam\"][\"rotMat\"][2][2].GetFloat());*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          6297
    Length:          192
    ReplacementText: 'sycl::float3(d["cam"]["rotMat"][2][0].GetFloat(), d["cam"]["rotMat"][2][1].GetFloat(), d["cam"]["rotMat"][2][2].GetFloat())'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          6492
    Length:          0
    ReplacementText: "/* DPCT_ORIG         scene->camTrans = make_float3(d[\"cam\"][\"t\"][0].GetFloat(),\r\n                                      d[\"cam\"][\"t\"][1].GetFloat(),\r\n                                      d[\"cam\"][\"t\"][2].GetFloat());*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          6518
    Length:          176
    ReplacementText: 'sycl::float3(d["cam"]["t"][0].GetFloat(), d["cam"]["t"][1].GetFloat(), d["cam"]["t"][2].GetFloat())'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          7027
    Length:          0
    ReplacementText: "/* DPCT_ORIG         scene->shaderVolumeColor = make_float3(d[\"volumeColor\"][0].GetFloat(),\r\n                                         d[\"volumeColor\"][1].GetFloat(),\r\n                                         d[\"volumeColor\"][2].GetFloat());*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          7062
    Length:          191
    ReplacementText: 'sycl::float3(d["volumeColor"][0].GetFloat(), d["volumeColor"][1].GetFloat(), d["volumeColor"][2].GetFloat())'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          7256
    Length:          0
    ReplacementText: "/* DPCT_ORIG         scene->shaderScattering = make_float3(d[\"scatteringColor\"][0].GetFloat(),\r\n                                        d[\"scatteringColor\"][1].GetFloat(),\r\n                                        d[\"scatteringColor\"][2].GetFloat());*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          7290
    Length:          201
    ReplacementText: 'sycl::float3(d["scatteringColor"][0].GetFloat(), d["scatteringColor"][1].GetFloat(), d["scatteringColor"][2].GetFloat())'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          7758
    Length:          0
    ReplacementText: "/* DPCT_ORIG         scene->shaderTempRange = make_float2(d[\"shaderTempRange\"][0].GetFloat(),\r\n                                             d[\"shaderTempRange\"][1].GetFloat());*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          7791
    Length:          129
    ReplacementText: 'sycl::float2(d["shaderTempRange"][0].GetFloat(), d["shaderTempRange"][1].GetFloat())'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          8071
    Length:          0
    ReplacementText: "/* DPCT_ORIG             scene->shaderColorRampColors[i] = make_float3(d[\"shaderColorRamp\"][\"colors\"][i][0].GetFloat(),\r\n                                                          d[\"shaderColorRamp\"][\"colors\"][i][1].GetFloat(),\r\n                                                          d[\"shaderColorRamp\"][\"colors\"][i][2].GetFloat());*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          8117
    Length:          276
    ReplacementText: 'sycl::float3(d["shaderColorRamp"]["colors"][i][0].GetFloat(), d["shaderColorRamp"]["colors"][i][1].GetFloat(), d["shaderColorRamp"]["colors"][i][2].GetFloat())'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          8480
    Length:          0
    ReplacementText: "/* DPCT_ORIG         scene->multiScatterDensityMask = make_float2( d[\"multiScatterDensityMask\"][0].GetFloat(),\r\n                                                      d[\"multiScatterDensityMask\"][1].GetFloat() );*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          8521
    Length:          156
    ReplacementText: 'sycl::float2(d["multiScatterDensityMask"][0].GetFloat(), d["multiScatterDensityMask"][1].GetFloat())'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          8680
    Length:          0
    ReplacementText: "/* DPCT_ORIG         scene->multiScatterColor = make_float3( d[\"multiScatterColor\"][0].GetFloat(),\r\n                                                d[\"multiScatterColor\"][1].GetFloat(),\r\n                                                d[\"multiScatterColor\"][2].GetFloat() );*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          8715
    Length:          225
    ReplacementText: 'sycl::float3(d["multiScatterColor"][0].GetFloat(), d["multiScatterColor"][1].GetFloat(), d["multiScatterColor"][2].GetFloat())'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          9029
    Length:          0
    ReplacementText: "/* DPCT_ORIG     static void sourceParticleParse(const SceneSettings *scn, float3 *posArray,*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          9091
    Length:          6
    ReplacementText: 'sycl::float3'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          9110
    Length:          0
    ReplacementText: "/* DPCT_ORIG                                     float3 *velArray, float *pscaleArray, float *tempArray,*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          9146
    Length:          6
    ReplacementText: 'sycl::float3'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          10166
    Length:          0
    ReplacementText: "/* DPCT_ORIG             posArray[i] = make_float3(array[0],\r\n                                      array[1],\r\n                                      array[2]);*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          10192
    Length:          119
    ReplacementText: 'sycl::float3(array[0], array[1], array[2])'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          10314
    Length:          0
    ReplacementText: "/* DPCT_ORIG             velArray[i] = make_float3(array[3],\r\n                                      array[4],\r\n                                      array[5]);*/\r\n"
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
  - FilePath:        'D:\GitHub\Blaze\src\Parser.h'
    Offset:          10340
    Length:          119
    ReplacementText: 'sycl::float3(array[3], array[4], array[5])'
    ConstantFlag:    ''
    ConstantOffset:  0
    InitStr:         ''
    NewHostVarName:  ''
    BlockLevelFormatFlag: false
MainSourceFilesDigest:
  - MainSourceFile:  'D:\GitHub\Blaze\src\Parser.h'
    Digest:          4d03597cbcfd88723676d5dcdb7ecf1b
DpctVersion:     2023.1.0
MainHelperFileName: dpct
USMLevel:        ''
FeatureMap:
  atomic.hpp:
    atomic_fetch_add:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\src\FluidSolver.cu'
        - 'D:\GitHub\Blaze\src\Grid.h'
      FeatureName:     atomic_fetch_add
      SubFeatureMap:   {}
  device.hpp:
    dev_mgr:
      IsCalled:        false
      FeatureName:     ''
      SubFeatureMap:
        dev_mgr_current_device_id:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\utils\helper_cuda.h'
          FeatureName:     'dev_mgr::current_device_id'
          SubFeatureMap:   {}
        dev_mgr_device_count:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\utils\helper_cuda.h'
          FeatureName:     'dev_mgr::device_count'
          SubFeatureMap:   {}
        dev_mgr_get_device:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\utils\helper_cuda.h'
          FeatureName:     'dev_mgr::get_device'
          SubFeatureMap:   {}
    device_ext:
      IsCalled:        false
      FeatureName:     ''
      SubFeatureMap:
        device_ext_default_queue:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\FluidSolver.cu'
            - 'D:\GitHub\Blaze\src\RenderEngine.cu'
          FeatureName:     'device_ext::default_queue'
          SubFeatureMap:   {}
        device_ext_get_device_info_return_info:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\utils\helper_cuda.h'
          FeatureName:     'device_ext::get_device_info'
          SubFeatureMap:   {}
        device_ext_queues_wait_and_throw:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\FluidSolver.cu'
            - 'D:\GitHub\Blaze\src\RenderEngine.cu'
          FeatureName:     'device_ext::queues_wait_and_throw'
          SubFeatureMap:   {}
        device_ext_reset:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\main.cu'
            - 'D:\GitHub\Blaze\src\utils\helper_cuda.h'
          FeatureName:     'device_ext::reset'
          SubFeatureMap:   {}
    device_info:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\src\utils\helper_cuda.h'
      FeatureName:     device_info
      SubFeatureMap:
        device_info_get_integrated:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\utils\helper_cuda.h'
          FeatureName:     'device_info::get_integrated'
          SubFeatureMap:   {}
        device_info_get_major_version:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\utils\helper_cuda.h'
          FeatureName:     'device_info::get_major_version'
          SubFeatureMap:   {}
        device_info_get_max_clock_frequency:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\utils\helper_cuda.h'
          FeatureName:     'device_info::get_max_clock_frequency'
          SubFeatureMap:   {}
        device_info_get_max_compute_units:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\utils\helper_cuda.h'
          FeatureName:     'device_info::get_max_compute_units'
          SubFeatureMap:   {}
        device_info_get_minor_version:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\utils\helper_cuda.h'
          FeatureName:     'device_info::get_minor_version'
          SubFeatureMap:   {}
        device_info_get_name:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\utils\helper_cuda.h'
          FeatureName:     'device_info::get_name'
          SubFeatureMap:   {}
        device_info_set_major_version:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\utils\helper_cuda.h'
          FeatureName:     'device_info::set_major_version'
          SubFeatureMap:   {}
        device_info_set_minor_version:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\utils\helper_cuda.h'
          FeatureName:     'device_info::set_minor_version'
          SubFeatureMap:   {}
    get_current_device:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\src\FluidSolver.cu'
        - 'D:\GitHub\Blaze\src\RenderEngine.cu'
        - 'D:\GitHub\Blaze\src\main.cu'
        - 'D:\GitHub\Blaze\src\utils\helper_cuda.h'
      FeatureName:     get_current_device
      SubFeatureMap:   {}
    get_default_queue:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\src\FluidSolver.cu'
        - 'D:\GitHub\Blaze\src\RenderEngine.cu'
      FeatureName:     get_default_queue
      SubFeatureMap:   {}
    select_device:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\src\utils\helper_cuda.h'
      FeatureName:     select_device
      SubFeatureMap:   {}
  image.hpp:
    create_image_wrapper:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\src\Volume.h'
      FeatureName:     create_image_wrapper
      SubFeatureMap:   {}
    image_accessor_ext:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\src\RenderEngine.cu'
      FeatureName:     image_accessor_ext
      SubFeatureMap:   {}
    image_channel:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\src\Volume.h'
      FeatureName:     image_channel
      SubFeatureMap:
        image_channel_create:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\Volume.h'
          FeatureName:     'image_channel::create'
          SubFeatureMap:   {}
    image_data:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\src\Volume.h'
      FeatureName:     image_data
      SubFeatureMap:
        image_data_set_data:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\Volume.h'
          FeatureName:     'image_data::set_data'
          SubFeatureMap:   {}
        image_data_set_data_ptr:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\Volume.h'
          FeatureName:     'image_data::set_data_ptr'
          SubFeatureMap:   {}
        image_data_set_data_type:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\Volume.h'
          FeatureName:     'image_data::set_data_type'
          SubFeatureMap:   {}
    image_data_type:
      IsCalled:        true
      CallerSrcFiles:
        - 'C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\driver_types.h'
        - 'D:\GitHub\Blaze\src\Volume.h'
      FeatureName:     image_data_type
      SubFeatureMap:   {}
    image_matrix:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\src\Volume.h'
      FeatureName:     image_matrix
      SubFeatureMap:   {}
    image_wrapper_base:
      IsCalled:        false
      FeatureName:     ''
      SubFeatureMap:
        image_wrapper_base_set_addressing_mode:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\Volume.h'
          FeatureName:     'image_wrapper_base::set'
          SubFeatureMap:   {}
        image_wrapper_base_set_coordinate_normalization_mode_enum:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\Volume.h'
          FeatureName:     'image_wrapper_base::set'
          SubFeatureMap:   {}
        image_wrapper_base_set_filtering_mode:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\Volume.h'
          FeatureName:     'image_wrapper_base::set'
          SubFeatureMap:   {}
    image_wrapper_base_p_alias:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\src\Volume.h'
      FeatureName:     image_wrapper_base_p
      SubFeatureMap:   {}
    sampling_info:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\src\Volume.h'
      FeatureName:     sampling_info
      SubFeatureMap:
        sampling_info_set_addressing_mode:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\Volume.h'
          FeatureName:     'sampling_info::set'
          SubFeatureMap:   {}
        sampling_info_set_coordinate_normalization_mode_enum:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\Volume.h'
          FeatureName:     'sampling_info::set'
          SubFeatureMap:   {}
        sampling_info_set_filtering_mode:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\Volume.h'
          FeatureName:     'sampling_info::set'
          SubFeatureMap:   {}
  memory.hpp:
    constant_memory_alias:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\src\RenderEngine.cu'
        - 'D:\GitHub\Blaze\thirdparty\cuda-noise\cuda_noise.cuh'
      FeatureName:     constant_memory
      SubFeatureMap:   {}
    device_memory:
      IsCalled:        false
      FeatureName:     ''
      SubFeatureMap:
        device_memory_get_ptr:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\RenderEngine.cu'
          FeatureName:     'device_memory::get_ptr'
          SubFeatureMap:   {}
        device_memory_init:
          IsCalled:        true
          CallerSrcFiles:
            - 'D:\GitHub\Blaze\src\RenderEngine.cu'
          FeatureName:     'device_memory::init'
          SubFeatureMap:   {}
    dpct_accessor:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\thirdparty\cuda-noise\cuda_noise.cuh'
      FeatureName:     accessor
      SubFeatureMap:   {}
    dpct_memcpy:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\src\FluidSolver.cu'
      FeatureName:     dpct_memcpy
      SubFeatureMap:   {}
    dpct_memcpy_2d:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\src\FluidSolver.cu'
      FeatureName:     dpct_memcpy
      SubFeatureMap:   {}
    dpct_memcpy_3d:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\src\FluidSolver.cu'
      FeatureName:     dpct_memcpy
      SubFeatureMap:   {}
    dpct_memset:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\src\FluidSolver.cu'
      FeatureName:     dpct_memset
      SubFeatureMap:   {}
    dpct_memset_2d:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\src\FluidSolver.cu'
      FeatureName:     dpct_memset
      SubFeatureMap:   {}
    dpct_memset_3d:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\src\FluidSolver.cu'
      FeatureName:     dpct_memset
      SubFeatureMap:   {}
    memcpy_direction:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\src\FluidSolver.cu'
      FeatureName:     memcpy_direction
      SubFeatureMap:   {}
    memory_region:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\thirdparty\cuda-noise\cuda_noise.cuh'
      FeatureName:     memory_region
      SubFeatureMap:   {}
  util.hpp:
    err_types:
      IsCalled:        true
      CallerSrcFiles:
        - 'D:\GitHub\Blaze\src\utils\helper_cuda.h'
      FeatureName:     err_types
      SubFeatureMap:   {}
CompileTargets:  {}
OptionMap:
  AnalysisScopePath:
    Value:           'D:\GitHub\Blaze'
    Specified:       false
  AsyncHandler:
    Value:           'false'
    Specified:       false
  CommentsEnabled:
    Value:           'false'
    Specified:       false
  CompilationsDir:
    Value:           'D:\GitHub\Blaze'
    Specified:       false
  CtadEnabled:
    Value:           'false'
    Specified:       false
  CustomHelperFileName:
    Value:           dpct
    Specified:       false
  EnablepProfiling:
    Value:           'false'
    Specified:       false
  ExperimentalFlag:
    Value:           '0'
    Specified:       false
  ExplicitClNamespace:
    Value:           'false'
    Specified:       false
  ExplicitNamespace:
    Value:           '20'
    Specified:       false
  ExtensionDDFlag:
    Value:           '0'
    Specified:       false
  ExtensionDEFlag:
    Value:           '4294967295'
    Specified:       false
  NDRangeDim:
    Value:           '3'
    Specified:       false
  NoDRYPattern:
    Value:           'false'
    Specified:       false
  OptimizeMigration:
    Value:           'false'
    Specified:       false
  ProcessAll:
    Value:           'false'
    Specified:       false
  RuleFile:
    Value:           ''
    Specified:       false
  SyclNamedLambda:
    Value:           'false'
    Specified:       false
  UsmLevel:
    Value:           '1'
    Specified:       false
  VcxprojFile:
    Value:           'D:\GitHub\Blaze\Blaze.vcxproj'
    Specified:       true
...
